name: Publish Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PluginName : CoreMods-CoreLib
      ThunderstoreRelease: true
      PublishNuget: true
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 0 # can't shallowly clone due to git versioning
        
    - name: Get version of the project
      id: get-version
      uses: 'euberdeveloper/ga-project-version@main'
      with:
        path: 'version.json'

    - name: Check Tag
      id: check-tag
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ steps.get-version.outputs.version }}
        regex: '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'

    - name: Fail if invalid
      if: steps.check-tag.outputs.match == ''
      uses: Actions/github-script@v3
      with:
        script: |
         core.setFailed('Invalid tag')

    - uses: actions/setup-dotnet@v1
      
    - name: Setup Thunderstore CLI
      run: |
        dotnet tool install -g tcli
    
    - name: Build & zip
      run: |
        dotnet build CoreLib.sln -c Release /p:ReleaseMode=1
        tcli build --config-path Config/thunderstore.toml --package-version ${{ steps.get-version.outputs.version }}

    - name: Publish to Thunderstore
      env:
        TCLI_AUTH_TOKEN: ${{ secrets.TCLI_AUTH_TOKEN }}
      run: |
        tcli publish --config-path Config/thunderstore.toml --package-version ${{ steps.get-version.outputs.version }}
      if: env.ThunderstoreRelease == 'true'
      
    - name: Publish to NuGet
      run: |
        dotnet pack CoreLib/CoreLib.csproj /p:ReleaseMode=1 -c Release -o "."
        dotnet nuget push *.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
      if: env.PublishNuget == 'true'